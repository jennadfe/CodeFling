@section CSS{
<style>
    .colourBorder {
    height:200px;
    margin: 5px;
    }
</style>
}

@section Title{
    <h2>Random Animated Colours</h2>
}

@section BodyContent {
    <div class="row">
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
        <div class="col-sm-4 portfolio-item">
            <div class="colourBorder"></div>
        </div>
    </div>
}

@section BodyDescription{
    <p>This example uses jQuery to randomly select a colour for each of the boxes and then animate their Red, Green, and Blue values independently accoring to a direction variable (up or down) applied by adding and removing a class when the animated colour reaches a boundary (> 255 or < 0). The example allows for RGBA so the colours can have an opacity applied. The opacity could easily be animated also.</p>
}

@section Path{
    ~/Views/Pages/RandomAnimatedColours.cshtml
}

@section Client{
    <a href="#">Personal</a>
}

@section Date{
    October 2017
}

@section Dependencies{

}

@section Scripts{
    <!-- Script to change background colours randomly -->
    <script>
        $(".colourBorder").each(function (index, element) {
            var red = Math.floor((Math.random() * 255) + 0);
            var green = Math.floor((Math.random() * 255) + 0);
            var blue = Math.floor((Math.random() * 255) + 0);
            $(this).css('background-color', 'rgba(' + red + ',' + green + ',' + blue + ', 0.25)');
            $(this).addClass('goingUp');
        });
        setInterval(
            function () {
                $(".colourBorder").each(function (index, element) {
                    var rgb = "" + $(this).css('background-color');
                    rgb = rgb.match(/rgba?\((\d{1,3}), ?(\d{1,3}), ?(\d{1,3})\)?(?:, ?(\d(?:\.\d?))\))?/);
                    var red = parseInt(rgb[1]);
                    var green = parseInt(rgb[2]);
                    var blue = parseInt(rgb[3]);

                    if ($(this).hasClass('goingUp')) { red++; } else { red--; }
                    if (red > 255) { red = 255; $(this).removeClass('goingUp'); $(this).addClass('goingDown') }
                    if (red < 0) { red = 0; $(this).removeClass('goingDown'); $(this).addClass('goingUp') }

                    if (Math.floor(Math.random() * 2) == 0) { green++; } else { green--; }
                    if (green > 255) { green = 255; $(this).removeClass('goingUp'); $(this).addClass('goingDown') }
                    if (green < 0) { green = 0; $(this).removeClass('goingDown'); $(this).addClass('goingUp') }

                    if (Math.floor(Math.random() * 2) == 0) { blue++; } else { blue--; }
                    if (blue > 255) { blue = 255; $(this).removeClass('goingUp'); $(this).addClass('goingDown') }
                    if (blue < 0) { blue = 0; $(this).removeClass('goingDown'); $(this).addClass('goingUp') }

                    $(this).css('background-color', 'rgba(' + red + ',' + green + ',' + blue + ', 0.25)');
                    $(this).innerHTML = '<div>background-color', 'rgba(' + red + ',' + green + ',' + blue + ', 0.25)</div>';
                });
            },
            7  /* 1000 ms = 1 sec */
        );
    </script>
}